{"version":3,"sources":["Layout/Buttons/Buttons.js","pages/Docs/Docs.module.css","pages/GetStarted/GetStarted.module.css","Layout/Buttons/Buttons.module.css","img/git-co-commit-pairing-role.webp","img/git-co-commit-pairing.webp","img/git-co-commit-before-gitpair.webp","img/git-co-commit-after-gitpair.webp","img/git-co-commit-use.webp","img/git-co-commit-node-setup.webp","img/git-co-commit-package-json.webp","img/git-co-commit-npm-git.webp","pages/Docs/Doc1.js","pages/Docs/Doc2.js","pages/Docs/Doc3.js","pages/Docs/Doc4.js","pages/Docs/Doc5.js","pages/Docs/Doc6.js","pages/GetStarted/GetStarted.js"],"names":["Buttons","props","className","classes","Btns","prevLink","Link","to","nextLink","module","exports","Doc1","Content","Title","Para","src","PairRole","Image","alt","Doc2","ImageBorder","join","Pairing","Doc3","SubTitle","LenImage","BeforePairing","style","width","AfterPairing","Doc4","href","target","rel","Code","Doc5","CmdImage","UseGitCoCommit","Doc6","NodeSetup","PackageJson","NpmGit","GetStarted","Docs","Sidebar","exact","path","component"],"mappings":"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","file":"static/js/3.6ac80e2b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './Buttons.module.css';\n\nconst Buttons = (props) => {\n    return (\n        <div className={classes.Btns}>\n            {\n                props.prevLink ?\n                    <Link className={classes.Link} to={props.prevLink}>{'< '}Previous</Link> :\n                    <Link to='#'> </Link>\n            }\n            {props.nextLink && <Link className={classes.Link} to={props.nextLink}>Next{' >'}</Link>}\n        </div>\n    )\n}\n\nexport default Buttons;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Docs_Content__1sV3g\",\"Title\":\"Docs_Title__OGcnA\",\"SubTitle\":\"Docs_SubTitle__1wNPT\",\"Para\":\"Docs_Para__3JTtA\",\"List\":\"Docs_List__GwYCj\",\"SpecialText\":\"Docs_SpecialText__3x2ga\",\"Image\":\"Docs_Image__30m5J\",\"LenImage\":\"Docs_LenImage__2M_g6\",\"CmdImage\":\"Docs_CmdImage__1Fzsu\",\"ImageBorder\":\"Docs_ImageBorder__3ZpCG\",\"Code\":\"Docs_Code__17_8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Docs\":\"GetStarted_Docs__1zE5X\",\"Content\":\"GetStarted_Content__36x3A\",\"Sidebar\":\"GetStarted_Sidebar__1KPGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btns\":\"Buttons_Btns__3u-Cq\",\"Link\":\"Buttons_Link__2ovh3\"};","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-pairing-role.814574f2.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-pairing.c121805b.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-before-gitpair.f280e555.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-after-gitpair.8b374657.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-use.b6f85d7f.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-node-setup.4f989a52.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-package-json.211d7f1e.webp\";","module.exports = __webpack_public_path__ + \"static/media/git-co-commit-npm-git.539db58a.webp\";","import React from 'react';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport classes from './Docs.module.css';\nimport PairRole from '../../img/git-co-commit-pairing-role.webp';\n\nconst Doc1 = () => {\n    return (\n        <>\n            <Buttons nextLink='/get-started/why-do-we-need-pair-programming' />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>What is pair programming?</h1>\n                <p className={classes.Para}>Pair programming involves two developers writing code together by sharing the single system. A pair of developers not only write the code but also plan and discuss their work.</p>\n                <p className={classes.Para}>In a pair of developers, one can be a driver and other can be a navigator. A driver is the person who types the code. He should always talk through what he is doing while doing it. A navigator is a person who observes the code. He reviews the code, gives direction and shares thoughts while the driver writes the code.</p>\n                <img src={PairRole} className={classes.Image} alt='Roles in Pairing' />\n                <p className={classes.Para}>The idea of the pair division is to have two different perspectives on the code. The driver should always focus on completing the code. The navigator should always focus on bugs and larger issues. Both of the developers have the big picture in mind at the end.</p>\n            </div>\n            <Buttons nextLink='/get-started/why-do-we-need-pair-programming' />\n        </>\n    )\n}\n\nexport default Doc1;\n","import React from 'react';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport classes from './Docs.module.css';\nimport Pairing from '../../img/git-co-commit-pairing.webp'\n\nconst Doc2 = () => {\n    return (\n        <>\n            <Buttons prevLink='/get-started/what-is-pair-programming' nextLink='/get-started/what-is-git-co-commit' />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>Why do we need pair programming?</h1>\n                <p className={classes.Para}><b>Less bugs:</b> If the driver encounters a bug with the code, there will be two of them whoâ€™ll solve the problem. It will reduce the bugs in the overall product and it will result in better code.</p>\n                <p className={classes.Para}><b>Improve interpersonal skills:</b>Pair programming involves a collaborative way of working which will improve a lot of communication and teamwork. Pair programming not only improves programming skills, but can also help programmers develop their interpersonal skills.</p>\n                <p className={classes.Para}><b>Better knowledge sharing:</b> While a pair of developers work on the same code,  it helps them to exchange their knowledge and accept certain best practices. Different experiences and perspectives will lead to the consideration of more alternatives.</p>\n                <img className={[classes.Image, classes.ImageBorder].join(' ')} src={Pairing} alt=\"Pairing benefits\" />\n                <p className={classes.Para}>In a pair, when one of them leaves the project or the company, it will not kill the project. The others in the pair can always take it up and finish it. It is good to switch pairs frequently, to keep everyone working on the project up to date.</p>\n            </div>\n            <Buttons prevLink='/get-started/why-we-need-pair-programming' nextLink='/get-started/what-is-git-co-commit' />\n        </>\n    )\n}\n\nexport default Doc2;\n","import React from 'react';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport BeforePairing from '../../img/git-co-commit-before-gitpair.webp';\nimport AfterPairing from '../../img/git-co-commit-after-gitpair.webp';\n\nimport classes from './Docs.module.css';\n\nconst Doc3 = () => {\n    return (\n        <>\n            <Buttons prevLink=\"/get-started/why-do-we-need-pair-programming\" nextLink=\"/get-started/installing-node-js\" />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>What is git co commit?</h1>\n                <p className={classes.Para}>When a pair or multiple developers work on git projects, there is a convention that allows us to document our co-authors in the commit message. However, adding the co-authorship information on every single commit is painful.</p>\n                <p className={classes.Para}>Do a git commit as normal with  the pair members username, to make them get credit for the commit (if more than one member works on the same code, separate the username by comma). The author name(who writes code - Driver) on the commit added automatically.</p>\n                <p className={classes.Para}>Each co-author will be added to the commit message, so that they are also credited in the github contributions view!</p>\n                <h3 className={classes.SubTitle}>Before Pairing</h3>\n                <img className={classes.LenImage} src={BeforePairing} alt=\"Before Pairing\" />\n                <h3 className={classes.SubTitle}>After Pairing</h3>\n                <img className={classes.LenImage} style={{ width: \"100%\" }} src={AfterPairing} alt=\"After Pairing\" />\n            </div>\n            <Buttons prevLink=\"/get-started/why-do-we-need-pair-programming\" nextLink=\"/get-started/installing-node-js\" />\n        </>\n    )\n}\n\nexport default Doc3;\n","import React from 'react';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport classes from './Docs.module.css';\n\nconst Doc4 = () => {\n    return (\n        <>\n            <Buttons prevLink=\"/get-started/what-is-git-co-commit\" nextLink=\"/get-started/installing-using-git-co-commit\" />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>Installing Node JS</h1>\n                <p className={classes.Para}>1. Download Node js installer from the <a href=\"https://nodejs.org/en/download/\" target=\"_blank\" rel=\"noopener noreferrer\">official website</a> as per the operating system(OS).</p>\n                <p className={classes.Para}>2. Run the downloaded Node js installer - including accepting license, selecting destination and authenticate for install.</p>\n                <p className={classes.Para}>3. To ensure Node js has been installed successfully run the following command in cmd or bash</p>\n                <code className={classes.Code}>node -v</code>\n                <p className={classes.Para}>4. To ensure npm (Node Package Manager) has been added with node js successfully run the following command in cmd or bash</p>\n                <code className={classes.Code}>npm -v</code>\n            </div>\n            <Buttons prevLink=\"/get-started/what-is-git-co-commit\" nextLink=\"/get-started/installing-using-git-co-commit\" />\n        </>\n    )\n}\n\nexport default Doc4;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport UseGitCoCommit from '../../img/git-co-commit-use.webp'\n\nimport classes from './Docs.module.css';\n\nconst Doc5 = () => {\n    return (\n        <>\n            <Buttons prevLink=\"/get-started/installing-node-js\" nextLink=\"/get-started/setup-git-co-commit-for-node-project\" />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>Installing and using git co commit</h1>\n                <p className={classes.Para}>Before installing git co commit package ensure that, you have installed the Node js correctly. If not, Please read the <Link to=\"/get-started/installing-node-js\">previous page</Link>.</p>\n                <p className={classes.Para}>To install git co commit run the following command in the cmd or bash</p>\n                <code className={classes.Code}>npm i -g git-co-commit</code>\n                <p className={classes.Para}>It will install the git-co-commit package and add all the dependencies to the root level of your computer.</p>\n                <h3 className={classes.SubTitle}>To use the installed git co commit package do the following:</h3>\n                <p className={classes.Para}>1. Create a folder and then open the folder in cmd or bash</p>\n                <p className={classes.Para}>2. Run git init</p>\n                <p className={classes.Para}>3. Add index.html file</p>\n                <p className={classes.Para}>4. Run git add index.html</p>\n                <p className={classes.Para}>5. Run commit - it will ask for commit message after that it will ask pairs username separate by comma (Author name doesnâ€™t need to be included).</p>\n                <img className={classes.CmdImage} src={UseGitCoCommit} alt=\"Use git-co-commit\" />\n            </div>\n            <Buttons prevLink=\"/get-started/installing-node-js\" nextLink=\"/get-started/setup-git-co-commit-for-node-project\" />\n        </>\n    )\n}\n\nexport default Doc5;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Buttons from '../../Layout/Buttons/Buttons';\n\nimport NodeSetup from '../../img/git-co-commit-node-setup.webp';\nimport PackageJson from '../../img/git-co-commit-package-json.webp';\nimport NpmGit from '../../img/git-co-commit-npm-git.webp';\n\nimport classes from './Docs.module.css';\n\nconst Doc6 = () => {\n    return (\n        <>\n            <Buttons prevLink=\"/get-started/installing-using-git-co-commit\" nextLink=\"/references/co-authered-by-in-git-commit\" />\n            <div className={classes.Content}>\n                <h1 className={classes.Title}>Setup git co commit for node project</h1>\n                <p className={classes.Para}>Before installing git co commit package ensure that, you have installed the Node js correctly. If not, Please read the <Link to=\"/get-started/installing-node-js\">previous page</Link>.</p>\n                <h3 className={classes.SubTitle}>To setup do the following steps</h3>\n                <p className={classes.Para}>1. Create a folder and then open the folder in cmd or bash</p>\n                <p className={classes.Para}>2. Run npm init -y</p>\n                <p className={classes.Para}>3. Run npm i git-co-commit</p>\n                <img className={classes.CmdImage} src={NodeSetup} alt=\"Setup node project\" />\n                <p className={classes.Para}>4. Add the following in package.json file under scripts</p>\n                <code className={classes.Code}>\n                    {`\"scripts\": {\n                        \"commit\": \"commit\"\n                    }`}\n                </code>\n                <img className={classes.CmdImage} src={PackageJson} alt=\"Package.json\" />\n                <p className={classes.Para}>5. Run git init</p>\n                <p className={classes.Para}>6. Add index.html file</p>\n                <p className={classes.Para}>7. Run git add index.html</p>\n                <p className={classes.Para}>8. Run npm run commit - it will ask for commit message after that it will ask pairs username separate by comma (Author name doesnâ€™t need to be included).</p>\n                <img className={classes.CmdImage} src={NpmGit} alt=\"Npm run commit\" />\n            </div>\n            <Buttons prevLink=\"/get-started/installing-using-git-co-commit\" nextLink=\"/references/co-authered-by-in-git-commit\" />\n        </>\n    )\n}\n\nexport default Doc6;\n","import React from 'react';\nimport { Switch, Route } from 'react-router';\n\nimport classes from './GetStarted.module.css'\n\nimport Sidebar from '../../Layout/Sidebar/Sidebar';\n\n// Importing Docs pages\nimport Doc1 from '../Docs/Doc1';\nimport Doc2 from '../Docs/Doc2';\nimport Doc3 from '../Docs/Doc3';\nimport Doc4 from '../Docs/Doc4';\nimport Doc5 from '../Docs/Doc5';\nimport Doc6 from '../Docs/Doc6';\n\nconst GetStarted = () => {\n    return (\n        <div className={classes.Docs}>\n            <div className={classes.Sidebar}>\n                <Sidebar />\n            </div>\n            <div className={classes.Content}>\n                <Switch>\n                    <Route exact path='/get-started/what-is-pair-programming' component={Doc1} />\n                    <Route exact path='/get-started/why-do-we-need-pair-programming' component={Doc2} />\n                    <Route exact path='/get-started/what-is-git-co-commit' component={Doc3} />\n                    <Route exact path='/get-started/installing-node-js' component={Doc4} />\n                    <Route exact path='/get-started/installing-using-git-co-commit' component={Doc5} />\n                    <Route exact path='/get-started/setup-git-co-commit-for-node-project' component={Doc6} />\n                    <Route path='/get-started' component={Doc1} />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default GetStarted;\n"],"sourceRoot":""}